name: CI
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  setup-environment:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
          echo $GOPATH
      - name: Cache Go
        id: module-cache
        uses: actions/cache@v3
        with:
          path: ${{ env.GOPATH }}/pkg/mod
          key: go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Install dependencies
        if: steps.module-cache.outputs.cache-hit != 'true'
        run: go mod download

  test:
    strategy:
      matrix:
        go-version: [1.17.x, 1.18.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs:
      - setup-environment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: module-cache
        uses: actions/cache@v3
        with:
          path: ${{ env.GOPATH }}/pkg/mod
          key: go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Test
        run: go test -race ./...

  lint:
    runs-on: ubuntu-latest
    needs:
      - setup-environment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: module-cache
        uses: actions/cache@v3
        with:
          path: ${{ env.GOPATH }}/pkg/mod
          key: go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

  vet:
    strategy:
      matrix:
        go-version: [1.17.x, 1.18.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs:
      - setup-environment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: module-cache
        uses: actions/cache@v3
        with:
          path: ${{ env.GOPATH }}/pkg/mod
          key: go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Vet
        run: go vet ./...

  build:
    strategy:
      matrix:
        go-version: [1.17.x, 1.18.x]
    runs-on: ubuntu-latest
    needs:
      - setup-environment
      - test
      - lint
      - vet
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: module-cache
        uses: actions/cache@v3
        with:
          path: ${{ env.GOPATH }}/pkg/mod
          key: go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Test GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: release --rm-dist --skip-publish --skip-validate --snapshot
